@tailwind base;
@tailwind components;
@tailwind utilities;

@import '/node_modules/flowbite-vue/dist/index.css';
.router-link-exact-active {
    @apply font-bold text-blue-800 dark:text-blue-400
}
a {
    @apply font-medium text-blue-600 dark:text-blue-500 hover:underline
}
.navbar-link {
    @apply text-gray-900 hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent
}

.router-link-active.navbar-link {
    @apply font-bold text-blue-600 dark:text-blue-500
}

.menu > ul {
    @apply  w-full justify-around flex-row
}

h1, h2, h3, h4,h5 {
    @apply font-extrabold leading-none tracking-tight text-gray-900 dark:text-white
}



.input.big-input > .tiptap.ProseMirror {
    @apply min-h-[10rem] max-h-[20rem] overflow-auto;
}


.mention {
    @apply text-blue-600 hover:underline dark:text-blue-500 no-underline
}
.ProseMirror {
    outline: none;
}

.ProseMirror pre {
    background: #0D0D0D;
    color: #FFF;
    font-family: 'JetBrainsMono', monospace;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
}

.ProseMirror pre code {
    color: inherit;
    padding: 0;
    background: none;
    font-size: 0.8rem;
}

.ProseMirror pre .hljs-comment, .ProseMirror pre .hljs-quote {
    color: #616161;
}

.ProseMirror pre .hljs-variable, .ProseMirror pre .hljs-template-variable, .ProseMirror pre .hljs-attribute, .ProseMirror pre .hljs-tag, .ProseMirror pre .hljs-name, .ProseMirror pre .hljs-regexp, .ProseMirror pre .hljs-link, .ProseMirror pre .hljs-selector-id, .ProseMirror pre .hljs-selector-class {
    color: #F98181;
}

.ProseMirror pre .hljs-number, .ProseMirror pre .hljs-meta, .ProseMirror pre .hljs-built_in, .ProseMirror pre .hljs-builtin-name, .ProseMirror pre .hljs-literal, .ProseMirror pre .hljs-type, .ProseMirror pre .hljs-params {
    color: #FBBC88;
}

.ProseMirror pre .hljs-string, .ProseMirror pre .hljs-symbol, .ProseMirror pre .hljs-bullet {
    color: #B9F18D;
}

.ProseMirror pre .hljs-title, .ProseMirror pre .hljs-section {
    color: #FAF594;
}

.ProseMirror pre .hljs-keyword, .ProseMirror pre .hljs-selector-tag {
    color: #70CFF8;
}

.ProseMirror pre .hljs-emphasis {
    font-style: italic;
}

.ProseMirror pre .hljs-strong {
    font-weight: 700;
}

pre {
    background: #0d0d0d;
    color: #fff;
    font-family: 'JetBrainsMono', monospace;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
}

pre code {
    color: inherit;
    padding: 0;
    background: none;
    font-size: 0.8rem;
}

pre .hljs-comment, pre .hljs-quote {
    color: #616161;
}

pre .hljs-variable, pre .hljs-template-variable, pre .hljs-attribute, pre .hljs-tag, pre .hljs-name, pre .hljs-regexp, pre .hljs-link, pre .hljs-name, pre .hljs-selector-id, pre .hljs-selector-class {
    color: #f98181;
}

pre .hljs-number, pre .hljs-meta, pre .hljs-built_in, pre .hljs-builtin-name, pre .hljs-literal, pre .hljs-type, pre .hljs-params {
    color: #fbbc88;
}

pre .hljs-string, pre .hljs-symbol, pre .hljs-bullet {
    color: #b9f18d;
}

pre .hljs-title, pre .hljs-section {
    color: #faf594;
}

pre .hljs-keyword, pre .hljs-selector-tag {
    color: #70cff8;
}

pre .hljs-emphasis {
    font-style: italic;
}

pre .hljs-strong {
    font-weight: 700;
}

.ProseMirror blockquote {
    font-style: italic;
}

.ProseMirror blockquote > p {
    display: inline;
}

.ProseMirror blockquote:before {
    content: '“';
}

.ProseMirror blockquote:after {
    content: '”';
}

.ProseMirror h1 {
    @apply text-4xl;
}

.ProseMirror h2 {
    @apply text-3xl;
}

.ProseMirror h3 {
    @apply text-2xl;
}

.ProseMirror h4 {
    @apply text-xl;
}

.ProseMirror h5 {
    @apply text-lg;
}


.ProseMirror ol {
    @apply pl-6
}

.ProseMirror ol > li {
    @apply list-decimal;
}


.ProseMirror ul {
    @apply pl-6
}

.ProseMirror ul > li {
    @apply list-disc ;
}


.ProseMirror table td {
    min-width: 1vw;
}

.my-custom-class {
    width: 100%;
}

.ProseMirror table th {
    border-right: 1px solid rgba(12, 12, 13, 0.1);
    border-bottom: 1px solid rgba(12, 12, 13, 0.1);
    border-top: 1px solid rgba(12, 12, 13, 0.1);
}

.ProseMirror table td {
    border-right: 1px solid rgba(12, 12, 13, 0.1);
    border-bottom: 1px solid rgba(12, 12, 13, 0.1);
}

.ProseMirror table td:first-child,
.ProseMirror table th:first-child {
    border-left: 1px solid rgba(12, 12, 13, 0.1);
}

.input {
    @apply bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500
}

/* CSS for Embedded Button Approach */

/* Selected/clicked state - add padding and highlight */
.block-selected {
  box-shadow: 0 0 0 1px rgba(59, 130, 246, 0.5) !important;
  background-color: rgba(59, 130, 246, 0.05) !important;
  border-radius: 4px;
  padding: 0.75em !important;
  margin: 1.5em 0 !important; /* Add margin for better spacing around selected elements */
  transition: all 0.2s ease;
  position: relative !important; /* Important for button positioning */
}

/* Selected draw.io nodes */
.drawio-selected {
  outline: 1px solid rgba(59, 130, 246, 0.5) !important;
  border-radius: 4px;
  padding: 0.75em !important;
  margin: 1.5em 0 !important; /* Add margin for better spacing around selected elements */
  transition: all 0.2s ease;
  position: relative !important; /* Important for button positioning */
}

/* Hover state - just show a blue border */
.block-hover-highlighted {
  box-shadow: 0 0 0 1px rgba(59, 130, 246, 0.5) !important;
  border-radius: 4px;
  transition: all 0.2s ease;
}

/* Special hover style for draw.io nodes */
.drawio-hover-highlighted {
  outline: 1px solid rgba(59, 130, 246, 0.5) !important;
  border-radius: 4px;
  transition: all 0.2s ease;
}

/* Button styles for embedded buttons */
.block-hover-action-button {
  position: absolute;
  left: 0;
  width: 100%;
  height: 20px;
  cursor: pointer;
  z-index: 10;
  user-select: none;
  pointer-events: all;
  transition: opacity 0.2s ease;
}

/* Top button positioning */
.block-hover-action-button-top {
  top: -10px; /* Position at the top edge */
  transform: translateY(-50%); /* Center vertically */
}

/* Bottom button positioning */
.block-hover-action-button-bottom {
  bottom: -10px; /* Position at the bottom edge */
  transform: translateY(50%); /* Center vertically */
}

/* Line that runs across the width */
.block-hover-plus-line {
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: rgba(59, 130, 246, 0.4);
  transition: background-color 0.2s ease;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: translateY(-50%);
}

/* Make the line more visible on hover */
.block-hover-action-button:hover .block-hover-plus-line {
  background-color: rgba(59, 130, 246, 0.8);
  height: 2px;
}

/* Plus icon in the center */
.block-hover-plus-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  background-color: white;
  border: 1px solid rgba(59, 130, 246, 0.7);
  border-radius: 50%;
  color: rgba(59, 130, 246, 0.9);
  transition: all 0.2s ease;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  z-index: 2;
}

/* Adjust icon on hover */
.block-hover-action-button:hover .block-hover-plus-icon {
  background-color: rgba(59, 130, 246, 0.9);
  color: white;
  transform: scale(1.1);
}

/* No extra padding for unselected elements */
.ProseMirror p,
.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror h4,
.ProseMirror h5,
.ProseMirror h6,
.ProseMirror ul,
.ProseMirror ol,
.ProseMirror blockquote,
.ProseMirror pre,
.ProseMirror table {
  margin: inherit;
  padding: 0;
  position: relative;
  border-radius: 4px;
  transition: all 0.2s ease;
}

/* Special handling for better spacing around heading elements */
.ProseMirror h1.block-selected,
.ProseMirror h2.block-selected,
.ProseMirror h3.block-selected,
.ProseMirror h4.block-selected,
.ProseMirror h5.block-selected,
.ProseMirror h6.block-selected {
  margin: 2em 0 1.5em 0 !important; /* More space above headings */
}

/* Special handling for list items when selected */
.ProseMirror li .block-selected {
  margin: 0.75em 0 !important; /* Less margin for list items */
}

/* Special styling for tables when selected */
.ProseMirror table.block-selected {
  margin: 2em 0 !important; /* More space around tables */
  border-spacing: 0 !important;
}

/* Make draw.io elements respect the hover */
.ProseMirror [data-type="drawIo"] {
  position: relative;
  z-index: 1;
  display: block;
}

/* Increase spacing for codeblocks when selected */
.ProseMirror pre.block-selected {
  margin: 2em 0 !important;
  padding: 1em !important;
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .block-hover-plus-icon {
    background-color: rgba(30, 41, 59, 1);
    border-color: rgba(59, 130, 246, 0.8);
    color: rgba(147, 197, 253, 0.9);
  }

  .block-hover-action-button:hover .block-hover-plus-icon {
    background-color: rgba(59, 130, 246, 0.8);
    color: white;
  }

  .block-hover-plus-line {
    background-color: rgba(59, 130, 246, 0.5);
  }

  .block-hover-action-button:hover .block-hover-plus-line {
    background-color: rgba(59, 130, 246, 0.8);
  }

  .block-hover-highlighted {
    box-shadow: 0 0 0 1px rgba(96, 165, 250, 0.6) !important;
  }

  .drawio-hover-highlighted {
    outline: 1px solid rgba(96, 165, 250, 0.6) !important;
  }

  .block-selected {
    box-shadow: 0 0 0 1px rgba(96, 165, 250, 0.6) !important;
    background-color: rgba(59, 130, 246, 0.1) !important;
  }

  .drawio-selected {
    outline: 1px solid rgba(96, 165, 250, 0.6) !important;
  }
}

/* Make sure buttons don't interfere with text selection */
.block-hover-plus-icon svg {
  pointer-events: none;
}

/* Create extra space between selected and adjacent elements */
.block-selected + *,
* + .block-selected {
  margin-top: 1em !important;
}

/* Proper z-index handling */
.ProseMirror {
  position: relative;
  z-index: 1;
}

/* Create a larger hit area for buttons */
.block-hover-action-button::before {
  content: '';
  position: absolute;
  top: -8px;
  left: 0;
  width: 100%;
  height: 32px;
  z-index: 1;
}

/* Actually insert the buttons using data attributes and pseudo-elements */
.block-selected::before,
.drawio-selected::before {
  content: attr(data-top-button);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 0;
  z-index: 10;
}

.block-selected::after,
.drawio-selected::after {
  content: attr(data-bottom-button);
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0;
  z-index: 10;
}

/* Fix issue with content editable and pseudo-elements */
[contenteditable] {
  position: relative;
  z-index: 1;
}

/* Add custom styles for the embedded buttons to work in all browsers */
.block-hover-action-button {
  opacity: 1;
  border: none;
  background: transparent;
}

/* Ensure position: absolute works correctly */
.ProseMirror * {
  position: relative;
}


.selected-table-cell {
  background-color: rgba(59, 130, 246, 0.1) !important;
}

.selected-table-row {
  background-color: rgba(59, 130, 246, 0.05) !important;
}

.ProseMirror table tbody >tr:first-child{

  background-color: rgba(59, 130, 246, 0.05) !important;
}

.ProseMirror ul,
.ProseMirror ol {

    margin-left:1.5rem;
}

&.resize-cursor {
    cursor: ew-resize;
    cursor: col-resize;
  }
.ProseMirror table {
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;
  margin: 0;
  overflow: hidden;
}
